// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mdswebapi.Models;

#nullable disable

namespace mdswebapi.Migrations
{
    [DbContext(typeof(mdsDbContext))]
    [Migration("20240608120115_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mdswebapi.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cartID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerID");

                    b.HasKey("CartId")
                        .HasName("PK__cart__415B03D8CF0AF4A4");

                    b.HasIndex("CustomerId");

                    b.ToTable("cart", (string)null);
                });

            modelBuilder.Entity("mdswebapi.Models.CartDetail", b =>
                {
                    b.Property<int>("CdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cdID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CdId"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("cartID");

                    b.Property<int?>("MedId")
                        .HasColumnType("int")
                        .HasColumnName("medID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("CdId")
                        .HasName("PK__cartDeta__289C55A48E433A9B");

                    b.HasIndex("CartId");

                    b.HasIndex("MedId");

                    b.ToTable("cartDetail", (string)null);
                });

            modelBuilder.Entity("mdswebapi.Models.Category", b =>
                {
                    b.Property<int>("CateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cateID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateId"));

                    b.Property<string>("CateDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cateDesc");

                    b.Property<string>("CateName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("cateName");

                    b.HasKey("CateId")
                        .HasName("PK__categori__A88B4DC41691FD27");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("mdswebapi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("customerAddress");

                    b.Property<string>("CustomerEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("customerEmail");

                    b.Property<string>("CustomerLogin")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("customerLogin");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("customerName");

                    b.Property<string>("CustomerPassword")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("customerPassword");

                    b.Property<string>("CustomerPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("customerPhone");

                    b.HasKey("CustomerId")
                        .HasName("PK__customer__B611CB9D99012085");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("mdswebapi.Models.Medicine", b =>
                {
                    b.Property<int>("MedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("medID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedId"));

                    b.Property<int?>("CateId")
                        .HasColumnType("int")
                        .HasColumnName("cateID");

                    b.Property<string>("MedDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("medDesc");

                    b.Property<int?>("MedDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("medDiscount");

                    b.Property<string>("MedName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("medName");

                    b.Property<string>("MedPicture")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("medPicture");

                    b.Property<decimal?>("MedPrice")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("medPrice");

                    b.Property<int?>("MedRemain")
                        .HasColumnType("int")
                        .HasColumnName("medRemain");

                    b.Property<int?>("PharId")
                        .HasColumnType("int")
                        .HasColumnName("pharID");

                    b.HasKey("MedId")
                        .HasName("PK__medicine__2D4FA91CF950ACE6");

                    b.HasIndex("CateId");

                    b.HasIndex("PharId");

                    b.ToTable("medicines", (string)null);
                });

            modelBuilder.Entity("mdswebapi.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerID");

                    b.Property<DateOnly?>("OrderDeliveredAt")
                        .HasColumnType("date")
                        .HasColumnName("orderDeliveredAt");

                    b.Property<DateOnly?>("OrderPlacedAt")
                        .HasColumnType("date")
                        .HasColumnName("orderPlacedAt");

                    b.Property<int?>("OsId")
                        .HasColumnType("int")
                        .HasColumnName("osID");

                    b.Property<decimal?>("ShippingFees")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("shippingFees");

                    b.HasKey("OrderId")
                        .HasName("PK__order__0809337D8B57FA0F");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OsId");

                    b.ToTable("order", (string)null);
                });

            modelBuilder.Entity("mdswebapi.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int?>("ItemQuantity")
                        .HasColumnType("int")
                        .HasColumnName("itemQuantity");

                    b.Property<int?>("MedId")
                        .HasColumnType("int")
                        .HasColumnName("medID");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderID");

                    b.HasKey("OrderItemId")
                        .HasName("PK__orderIte__3724BD72FB0C49AF");

                    b.HasIndex("MedId");

                    b.HasIndex("OrderId");

                    b.ToTable("orderItem", (string)null);
                });

            modelBuilder.Entity("mdswebapi.Models.OrderStatus", b =>
                {
                    b.Property<int>("OsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("osID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OsId"));

                    b.Property<string>("OsDesc")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("osDesc");

                    b.HasKey("OsId")
                        .HasName("PK__orderSta__5241DF11B0C6ADFD");

                    b.ToTable("orderStatus", (string)null);
                });

            modelBuilder.Entity("mdswebapi.Models.Pharmacy", b =>
                {
                    b.Property<int>("PharId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pharID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PharId"));

                    b.Property<string>("PharAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pharAddress");

                    b.Property<string>("PharEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pharEmail");

                    b.Property<string>("PharLogin")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pharLogin");

                    b.Property<string>("PharName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pharName");

                    b.Property<string>("PharPass")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pharPass");

                    b.Property<string>("PharPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pharPhone");

                    b.HasKey("PharId")
                        .HasName("PK__pharmaci__8E7B6B32784A7171");

                    b.ToTable("pharmacies", (string)null);
                });

            modelBuilder.Entity("mdswebapi.Models.Promotion", b =>
                {
                    b.Property<int>("PromoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("promoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromoId"));

                    b.Property<int?>("DiscountPercent")
                        .HasColumnType("int")
                        .HasColumnName("discountPercent");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("endDate");

                    b.Property<string>("PromoName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("promoName");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate");

                    b.HasKey("PromoId")
                        .HasName("PK__promotio__E19E71D6C784FB3C");

                    b.ToTable("promotions", (string)null);
                });

            modelBuilder.Entity("mdswebapi.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reviewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerID");

                    b.Property<int?>("MedId")
                        .HasColumnType("int")
                        .HasColumnName("medID");

                    b.Property<string>("ReviewContent")
                        .HasColumnType("text")
                        .HasColumnName("reviewContent");

                    b.HasKey("ReviewId")
                        .HasName("PK__reviews__2ECD6E24E98902BA");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MedId");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("mdswebapi.Models.Cart", b =>
                {
                    b.HasOne("mdswebapi.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__cart__customerID__5EBF139D");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("mdswebapi.Models.CartDetail", b =>
                {
                    b.HasOne("mdswebapi.Models.Cart", "Cart")
                        .WithMany("CartDetails")
                        .HasForeignKey("CartId")
                        .HasConstraintName("FK__cartDetai__cartI__60A75C0F");

                    b.HasOne("mdswebapi.Models.Medicine", "Med")
                        .WithMany("CartDetails")
                        .HasForeignKey("MedId")
                        .HasConstraintName("FK__cartDetai__medID__5FB337D6");

                    b.Navigation("Cart");

                    b.Navigation("Med");
                });

            modelBuilder.Entity("mdswebapi.Models.Medicine", b =>
                {
                    b.HasOne("mdswebapi.Models.Category", "Cate")
                        .WithMany("Medicines")
                        .HasForeignKey("CateId")
                        .HasConstraintName("FK__medicines__cateI__5DCAEF64");

                    b.HasOne("mdswebapi.Models.Pharmacy", "Phar")
                        .WithMany("Medicines")
                        .HasForeignKey("PharId")
                        .HasConstraintName("FK__medicines__pharI__656C112C");

                    b.Navigation("Cate");

                    b.Navigation("Phar");
                });

            modelBuilder.Entity("mdswebapi.Models.Order", b =>
                {
                    b.HasOne("mdswebapi.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__order__customerI__628FA481");

                    b.HasOne("mdswebapi.Models.OrderStatus", "Os")
                        .WithMany("Orders")
                        .HasForeignKey("OsId")
                        .HasConstraintName("FK__order__osID__619B8048");

                    b.Navigation("Customer");

                    b.Navigation("Os");
                });

            modelBuilder.Entity("mdswebapi.Models.OrderItem", b =>
                {
                    b.HasOne("mdswebapi.Models.Medicine", "Med")
                        .WithMany("OrderItems")
                        .HasForeignKey("MedId")
                        .HasConstraintName("FK__orderItem__medID__6477ECF3");

                    b.HasOne("mdswebapi.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__orderItem__order__6383C8BA");

                    b.Navigation("Med");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("mdswebapi.Models.Review", b =>
                {
                    b.HasOne("mdswebapi.Models.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__reviews__custome__6754599E");

                    b.HasOne("mdswebapi.Models.Medicine", "Med")
                        .WithMany("Reviews")
                        .HasForeignKey("MedId")
                        .HasConstraintName("FK__reviews__medID__66603565");

                    b.Navigation("Customer");

                    b.Navigation("Med");
                });

            modelBuilder.Entity("mdswebapi.Models.Cart", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("mdswebapi.Models.Category", b =>
                {
                    b.Navigation("Medicines");
                });

            modelBuilder.Entity("mdswebapi.Models.Customer", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("mdswebapi.Models.Medicine", b =>
                {
                    b.Navigation("CartDetails");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("mdswebapi.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("mdswebapi.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("mdswebapi.Models.Pharmacy", b =>
                {
                    b.Navigation("Medicines");
                });
#pragma warning restore 612, 618
        }
    }
}
